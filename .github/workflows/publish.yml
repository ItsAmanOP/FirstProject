name: Publish
on:
  workflow_dispatch:
    inputs:
      versionName:
        description: 'Version Name'
        required: true

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant Permission to Execute Gradle
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
        env:
          VERSION_NAME: ${{ github.event.inputs.versionName }}
          GPG_SIGNING_KEY_ID: ${{ secrets.GPG_SIGNING_KEY_ID }}
          GPG_SIGNING_PASSPHRASE_PASSWORD: ${{ secrets.GPG_SIGNING_PASSPHRASE_PASSWORD }}
          GPG_SIGNING_ARMED_KEY: ${{ secrets.GPG_SIGNING_ARMED_KEY }}
          SONATYPE_USER_NAME: ${{ secrets.SONATYPE_USER_NAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}

      - name: Publish Library
        run: |
          echo "Publishing libraryðŸš€"
          ./gradlew publishAllPublicationsToCentralPortal --no-daemon --no-parallel
          echo "Publishedâœ…"
        env:
          VERSION_NAME: ${{ github.event.inputs.versionName }}
          GPG_SIGNING_KEY_ID: ${{ secrets.GPG_SIGNING_KEY_ID }}
          GPG_SIGNING_PASSPHRASE_PASSWORD: ${{ secrets.GPG_SIGNING_PASSPHRASE_PASSWORD }}
          GPG_SIGNING_ARMED_KEY: ${{ secrets.GPG_SIGNING_ARMED_KEY }}
          SONATYPE_USER_NAME: ${{ secrets.SONATYPE_USER_NAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}

      - name: Create and push tag
        run: |
          git config --global user.email "amankumargourh@gmail.com"
          git config --global user.name "Aman Gour"

          git tag -a $TAG -m "Release v$TAG"
          git push origin $TAG
        env:
          TAG: ${{ github.event.inputs.versionName }}

      - name: Create Release on GitHub
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.versionName }}
          release_name: SendOTP ${{ github.event.inputs.versionName }}
          draft: false
          prerelease: false